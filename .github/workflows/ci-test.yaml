#
# Copyright (c) 2020 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#

name: CI:test

on:
  workflow_dispatch:
    inputs: {}
  pull_request:
    branches:
      - master

jobs:

  docker-build:
    runs-on: ubuntu-18.04
    continue-on-error: ${{ matrix.default == false }}
    strategy:
      fail-fast: false
      matrix:
        platform: [linux/amd64]
        default: [true]
        arch: [amd64]
        include:
          - platform: linux/arm64
            default: false
            arch: arm64
          - platform: linux/ppc64le
            default: false
            arch: ppc64le
          - platform: linux/s390x
            default: false
            arch: s390x
    env:
      IMAGE: docker.io/okurinnyi/che-dashboard
      CACHE_IMAGE_FULL: docker.io/okurinnyi/che-dashboard:cache
    outputs:
      amd64: ${{ steps.result.outputs.amd64 }}
      arm64: ${{ steps.result.outputs.arm64 }}
      ppc64le: ${{ steps.result.outputs.ppc64le }}
      s390x: ${{ steps.result.outputs.s390x }}
    steps:
      -
        name: "Checkout Che Dashboard source code"
        uses: actions/checkout@v2
      -
        name: "Set up QEMU"
        uses: docker/setup-qemu-action@v1
      -
        name: "Set up Docker Buildx ${{ matrix.platform }}"
        uses: docker/setup-buildx-action@v1
      -
        name: "Docker docker.io Login"
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      -
        name: "Build and push ${{ matrix.platform }}"
        uses: docker/build-push-action@v2
        with:
          cache-from: type=registry,ref=${{ env.CACHE_IMAGE_FULL }}
          cache-to: type=registry,ref=${{ env.CACHE_IMAGE_FULL }},mode=max
          context: .
          file: ./apache.Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ env.IMAGE }}:${{ matrix.arch }}-next
      -
        id: result
        name: "Build result"
        if: ${{ success() }}
        run: echo "::set-output name=${{ matrix.arch }}::${{ matrix.arch }}-next"

  result:
    if: always()
    needs: docker-build
    runs-on: ubuntu-18.04
    env:
      IMAGE: docker.io/okurinnyi/che-dashboard
    steps:
      -
        name: "Docker docker.io Login"
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      -
        name: "Create manifest"
        run: |
          AMEND=""
          AMD64="amd64-next"
          if [ -n $AMD64 ]; then
            AMEND+=" --amend ${{ env.IMAGE }}:$AMD64";
          fi
          ARM64="arm64-next"
          if [ -n $ARM64 ]; then
            AMEND+=" --amend ${{ env.IMAGE }}:$ARM64";
          fi
          PPC64lE="ppc64le-next"
          if [ -n $PPC64lE ]; then
            AMEND+=" --amend ${{ env.IMAGE }}:$PPC64lE";
          fi
          S390X="s390x-next"
          if [ -n $S390X ]; then
            AMEND+=" --amend ${{ env.IMAGE }}:$S390X";
          fi
          if [ -z "$AMEND" ]; then
            echo "[!] Provide at least one image to create manifest list"
            exit 1;
          fi
          docker manifest create ${{ env.IMAGE }}:manifest-next $AMEND
          docker manifest push ${{ env.IMAGE }}:manifest-next
